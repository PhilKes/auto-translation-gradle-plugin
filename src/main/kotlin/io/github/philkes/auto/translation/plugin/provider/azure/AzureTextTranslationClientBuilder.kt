// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.
package io.github.philkes.auto.translation.plugin.provider.azure

import com.azure.ai.translation.text.TextTranslationClientBuilder
import com.azure.ai.translation.text.TextTranslationServiceVersion
import com.azure.ai.translation.text.models.TextTranslationAudience
import com.azure.core.credential.AzureKeyCredential
import com.azure.core.credential.BasicAuthenticationCredential
import com.azure.core.http.policy.FixedDelayOptions
import com.azure.core.http.policy.HttpLogDetailLevel
import com.azure.core.http.policy.HttpLogOptions
import com.azure.core.http.policy.RetryOptions
import com.azure.core.util.ClientOptions
import com.azure.core.util.MetricsOptions
import com.azure.core.util.TracingOptions
import java.io.Serializable
import java.time.Duration

/**
 * A builder for creating a new instance of the TextTranslationClient type.
 *
 * Copy of [TextTranslationClientBuilder] with the most important properties to make it serializable
 */
class AzureTextTranslationClientBuilder : Serializable {
    var region: String? = null

    var resourceId: String? = null

    var audience: String? = null

    var credential: String? = null

    // For Token Credentials
    var username: String? = null
    var password: String? = null

    /** The logging level for HTTP requests and responses. */
    var httpLogLevel: HttpLogDetailLevel? = null

    /** The logging level for HTTP requests and responses. */
    fun httpLogLevel(httpLogLevel: HttpLogDetailLevel): AzureTextTranslationClientBuilder {
        this.httpLogLevel = httpLogLevel
        return this
    }

    /** Flag indicating if distributed tracing should be enabled. */
    var tracingEnabled: Boolean? = null

    /** @see TracingOptions.setEnabled */
    fun tracingEnabled(tracingEnabled: Boolean): AzureTextTranslationClientBuilder {
        this.tracingEnabled = tracingEnabled
        return this
    }

    /** Flag indicating if metrics should be enabled. */
    var metricsEnabled: Boolean? = null

    /** @see MetricsOptions.setEnabled */
    fun metricsEnabled(metricsEnabled: Boolean): AzureTextTranslationClientBuilder {
        this.metricsEnabled = metricsEnabled
        return this
    }

    /** The retry options to configure retry policy for failed requests. */
    var maxRetries: Int? = null
    var retryDelay: Duration? = null

    /** @see TextTranslationClientBuilder.retryOptions */
    fun retryOptions(maxRetries: Int, delay: Duration): AzureTextTranslationClientBuilder {
        this.maxRetries = maxRetries
        this.retryDelay = delay
        return this
    }

    /** The service endpoint */
    var endpoint: String? = null

    /** @see TextTranslationClientBuilder.endpoint */
    fun endpoint(endpoint: String?): AzureTextTranslationClientBuilder {
        this.endpoint = endpoint
        return this
    }

    /** Service version */
    var serviceVersion: TextTranslationServiceVersion? = null

    /** @see TextTranslationClientBuilder.serviceVersion */
    fun serviceVersion(
        serviceVersion: TextTranslationServiceVersion?
    ): AzureTextTranslationClientBuilder {
        this.serviceVersion = serviceVersion
        return this
    }

    /** @see TextTranslationClientBuilder.credential */
    fun credential(keyCredential: String): AzureTextTranslationClientBuilder {
        this.credential = keyCredential
        return this
    }

    /** @see TextTranslationClientBuilder.region */
    fun region(region: String): AzureTextTranslationClientBuilder {
        this.region = region
        return this
    }

    /** @see TextTranslationClientBuilder.resourceId */
    fun resourceId(resourceId: String): AzureTextTranslationClientBuilder {
        this.resourceId = resourceId
        return this
    }

    /** @see TextTranslationClientBuilder.audience */
    fun audience(audience: String): AzureTextTranslationClientBuilder {
        this.audience = audience
        return this
    }

    /** @see TextTranslationClientBuilder.credential */
    fun credential(username: String, password: String): AzureTextTranslationClientBuilder {
        this.username = username
        this.password = password
        return this
    }

    override fun toString(): String {
        return "AzureTextTranslationClientBuilder(region=$region, resourceId=$resourceId, audience=$audience, credential=$credential, username=$username, password=$password, httpLogLevel=$httpLogLevel, tracingEnabled=$tracingEnabled, metricsEnabled=$metricsEnabled, maxRetries=$maxRetries, retryDelay=$retryDelay, endpoint=$endpoint, serviceVersion=$serviceVersion)"
    }
}

fun AzureTextTranslationClientBuilder.toActualBuilder(): TextTranslationClientBuilder {
    return TextTranslationClientBuilder().apply {
        httpLogLevel?.let { httpLogOptions(HttpLogOptions().setLogLevel(it)) }
        if (metricsEnabled != null || tracingEnabled != null) {
            clientOptions(
                ClientOptions().apply {
                    metricsEnabled?.let { setMetricsOptions(MetricsOptions().setEnabled(it)) }
                    tracingEnabled?.let { setTracingOptions(TracingOptions().setEnabled(it)) }
                }
            )
        }
        maxRetries?.let { retryOptions(RetryOptions(FixedDelayOptions(it, retryDelay!!))) }
        endpoint?.let { endpoint(it) }
        serviceVersion?.let { serviceVersion(it) }
        credential?.let { credential(AzureKeyCredential(it)) }
        region?.let { region(it) }
        resourceId?.let { resourceId(it) }
        audience?.let { audience(TextTranslationAudience.fromString(it)) }
        username?.let { credential(BasicAuthenticationCredential(it, password)) }
    }
}
